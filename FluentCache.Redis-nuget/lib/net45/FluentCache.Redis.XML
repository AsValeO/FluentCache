<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentCache.Redis</name>
    </assembly>
    <members>
        <member name="T:FluentCache.Redis.FluentRedisCache">
            <summary>
            A FluentCache implementation that uses Redis to store and retrieve cache values
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.#ctor(StackExchange.Redis.ConnectionMultiplexer,FluentCache.IParameterCacheKeyProvider)">
            <summary>
            Constructs a new cache instance for the desired redis connection. Allows for customizing the parameter caching strategy and the cache value serialization
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.#ctor(StackExchange.Redis.ConnectionMultiplexer)">
            <summary>
            Constructs a new cache instance for the desired redis connection. Uses the default parameter caching strategy and cache value serialization
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.Get(System.String,System.String)">
            <summary>
            Gets the desired value from the cache
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.Get``1(System.String,System.String)">
            <summary>
            Gets the desired value from the cache
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.Set(System.String,System.String,System.Object,FluentCache.CachePolicy)">
            <summary>
            Sets the value in the cache
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.Set``1(System.String,System.String,``0,FluentCache.CachePolicy)">
            <summary>
            Sets the value in the cache
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.Remove(System.String,System.String)">
            <summary>
            Removes the value from the cache
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.TryHandleCachingFailure(FluentCache.FluentCacheException,FluentCache.CacheOperation)">
            <summary>
            Attempts to handle caching failures. Return true to indicate that the error is handled and execution should continue
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.SerializeObjectToCacheInRedis(System.Object)">
            <summary>
            Serializes the specified cache value into a string to be stored in redis
            </summary>
        </member>
        <member name="M:FluentCache.Redis.FluentRedisCache.DeserializeObjectFromRedisCache``1(System.String)">
            <summary>
            Deserializes the redis cached value into the specified type
            </summary>
        </member>
    </members>
</doc>
